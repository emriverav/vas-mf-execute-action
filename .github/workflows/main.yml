name: Construir MF Execute Action y desplegar en GKE
 

on:
  push:
    branches:
      - main
env:
  PROJECT_ID: VAS-QR
  GAR_LOCATION: us-central1 
  GKE_CLUSTER: k8s-vas-qr-dev   
  GKE_ZONE: us-central1-c   
  DEPLOYMENT_NAME: mf-execute-action 
  IMAGE_NAME: mf/execute/action 
  REPOSITORY: samples 
  IMAGE: static-site

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Configure Workload Identity Federation and generate an access token.
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0.4.0'
      with:
        token_format: 'access_token'
        workload_identity_provider: 'projects/630162570845/locations/global/workloadIdentityPools/vas-github/providers/github-provider'
        service_account: 'github-actions-deploy@vas-qr.iam.gserviceaccount.com'
    # Alternative option - authentication via credentials json
    # - id: 'auth'
    #   uses: 'google-github-actions/auth@v0'
    #   with:
    #     credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    - name: Docker configuration
      run: |-
        echo ${{steps.auth.outputs.access_token}} | docker login -u oauth2accesstoken --password-stdin https://gcr.io      
    # Get the GKE credentials so we can deploy to the cluster
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v0
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "gcr.io/vas-qr/$IMAGE_NAME:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .
    # Push the Docker image to Google Artifact Registry
    - name: Publish
      run: |-
        docker push "gcr.io/vas-qr/$IMAGE_NAME:$GITHUB_SHA"
    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize    
    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        # replacing the image name in the k8s template
        ./kustomize edit set image LOCATION-gcr.io/vas-qr/IMAGE_NAME:TAG=gcr.io/vas-qr/$IMAGE_NAME:$GITHUB_SHA
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide
        
    - name: Google Chat Notification
      uses: Co-qn/google-chat-notification@releases/v1
      with:
        name: Microfront end  Execute Action Build
        url: https://chat.googleapis.com/v1/spaces/AAAAfRvRNBs/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI&token=TuwHpdotghDRPqPp75FGc3otSUo_CiYQfyuMsJD8NYo%3D
        status: ${{ job.status }}
